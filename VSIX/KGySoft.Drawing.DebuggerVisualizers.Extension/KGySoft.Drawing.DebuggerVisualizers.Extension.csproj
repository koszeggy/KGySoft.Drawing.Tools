<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!--When creating an out-of-proc extension, then target can be .NET 6+ or .NET Framework. Both have issues though:
        - When targeting .NET Framework, we always get a StreamJsonRpc.ConnectionLostException, even if the references are copied into a net4.6.2 folder as per the documentation: https://learn.microsoft.com/en-us/visualstudio/extensibility/visualstudio.extensibility/debugger-visualizer/debugger-visualizers?view=vs-2022#add-the-visualizer-object-source-dll-to-the-extension
          If we enable Just My Code, we see that maybe the issue is that the DependencyInjection.ServiceProvider class does not implement the AsyncDisposable method
        - When targeting .NET 6.0, we cannot debug .NET Framework projects: attempting to call visualizerTarget.ObjectSource.RequestDataAsync ends up in a StreamJsonRpc.RemoteInvocationException: 'Could not load file or assembly System.Runtime, Version=6.0.0.0 ...'
        - The visualizer must be a remote control, whose VM properties are forcibly serialized by JSON (unlike the debugged object itself that can use a custom binary serialization), and does not work for any complex type such as a BitmapSource
    --> 
    <TargetFramework>net6.0-windows</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>12</LangVersion>
    <UseWPF>true</UseWPF>

    <!-- Required for in-proc debugging only. -->
    <!--<VssdkCompatibleExtension>true</VssdkCompatibleExtension>-->
  </PropertyGroup>
  
  <!--vsixmanifest is needed for in-process hosting when no metadata is specified in the entry point so we exclude it for out-of-process extensions-->
  <ItemGroup>
    <None Remove="source.extension.vsixmanifest" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.Extensibility.Sdk" Version="17.9.2092" />
    <PackageReference Include="Microsoft.VisualStudio.Extensibility.Build" Version="17.9.2092" />
    <!--<PackageReference Include="Microsoft.VisualStudio.SDK" Version="17.6.36389" ExcludeAssets="runtime" />-->
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\StandardSerializerTest\StandardSerializerTest.csproj" />
  </ItemGroup>

  <ItemGroup>
    <!--<Content Include="..\..\DebuggerVisualizers\GdiPlus\KGySoft.Drawing.DebuggerVisualizers.GdiPlus\bin\$(Configuration)\net462\KGySoft.Drawing.DebuggerVisualizers.GdiPlus.dll" Link="netstandard2.0\KGySoft.Drawing.DebuggerVisualizers.GdiPlus.dll" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="..\..\DebuggerVisualizers\_Common\bin\$(Configuration)\net462\KGySoft.Drawing.DebuggerVisualizers.dll" Link="netstandard2.0\KGySoft.Drawing.DebuggerVisualizers.dll" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="..\..\KGySoft.Drawing.ImagingTools\bin\$(Configuration)\net462\KGySoft.Drawing.ImagingTools.exe" Link="netstandard2.0\KGySoft.Drawing.ImagingTools.exe" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="..\..\KGySoft.Drawing.ImagingTools\bin\$(Configuration)\net462\KGySoft.CoreLibraries.dll" Link="netstandard2.0\KGySoft.CoreLibraries.dll" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="..\..\KGySoft.Drawing.ImagingTools\bin\$(Configuration)\net462\KGySoft.Drawing.dll" Link="netstandard2.0\KGySoft.Drawing.dll" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="..\..\KGySoft.Drawing.ImagingTools\bin\$(Configuration)\net462\KGySoft.Drawing.Core.dll" Link="netstandard2.0\KGySoft.Drawing.Core.dll" CopyToOutputDirectory="PreserveNewest" />-->

    <!--We must link every reference from a netstandard2.0/net4.6.2/netcoreapp folder.-->
    <Content Include="..\StandardSerializerTest\bin\$(Configuration)\netstandard2.0\StandardSerializerTest.dll" Link="netstandard2.0\StandardSerializerTest.dll" CopyToOutputDirectory="PreserveNewest" />
    <!--<Content Include="..\StandardSerializerTest\bin\$(Configuration)\net6.0-windows\StandardSerializerTest.dll" Link="netcoreapp\StandardSerializerTest.dll" CopyToOutputDirectory="PreserveNewest" />-->
  </ItemGroup>

  <!--The XAML file must be embedded as a resource, because it is transferred to the remote side.-->
  <ItemGroup>
    <None Remove="_View\ImageVisualizerControl.xaml" />
    <EmbeddedResource Include="_View\ImageVisualizerControl.xaml" LogicalName="$(RootNamespace).ImageVisualizerControl.xaml" />
  </ItemGroup>

</Project>
