Legend:
! Breaking change
* Compatible change
- Bugfix
+ New feature
===============================================================================

~~~~~~~~~
* v2.4.0:
~~~~~~~~~

* KGySoft.Drawing.ImagingTools.exe
==================================
+ Targeting also .NET 5.0
+ Now panning a zoomed image is possible also by clicking and dragging with the mouse (besides usual scrolling).
+ Zooming is now possible also with keyboard shortcuts, the Auto Zoom button has now a drop-down part for the
  additional options.
+ Supporting localization from .resx files with editing, downloading and applying without restarting.
  Note: Right-to-left languages are also supported though with some limitations, especially under Linux/Mono.
  On Windows some validation tool tips are not aligned right but otherwise the layout is arranged correctly.
+ Palette visualizer form: OK/Cancel buttons
+ Color visualizer form: OK/Cancel buttons
+ Image visualizer form: OK/Cancel buttons
* Manual zooming is enabled even if Auto Zoom is on; this turns off Auto Zoom automatically.
* Turning smoothing of zoomed images on/off affects also shrunk images (previously affected enlarged images only).
- Fixing scaling of menu item images under Linux/Mono when using high DPI
- Color Count: Result was not always shown (and progress bar was not removed) if the operation ended very quickly.
- Resize:
  - Preventing that invalid sizes replace current text to 0
  - Changing error provider associated controls so the layout is not messed up on Linux
- Manage Installations:
  - Remove was always enabled even it there was no installed version
- Fixing possible errors when closing forms while an async operation is still in progress.
* API changes:
  * Members are annotated for using C# 8.0 nullable references
  + ViewModelFactory class:
    + New CreateLanguageSettings method
    + New CreateEditResources method
    + New CreateDownloadResources method
  + IViewModel interface
    + New IsModified property
  * IViewModel<TModel> interface
    * The IsModified property is now inherited from IViewModel
  + IView interface:
    + New ShowDialog(IView) overload
  + ViewFactory class:
    + New ShowDialog(IViewModel, IView) overload

- KGySoft.Drawing.DebuggerVisualizers.dll
=========================================
- Fixing a possible IndexOutOfRangeException when debugging an animated GIF.
- Fixing possible incorrect initially displayed size info when debugging a multi-resolution icon or bitmap.
* Improved performance and reduced memory consumption when serializing and deserializing debugged objects.

* KGySoft.Drawing.DebuggerVisualizers.Package.dll
=================================================
* When ImagingTools is executed from Visual Studio Tools menu a new thread is created so the possible lagging of
  Visual Studio does not affect the performance of ImagingTools anymore.


~~~~~~~~~
+ v2.3.0:
~~~~~~~~~

+ KGySoft.Drawing.ImagingTools.exe
==================================
+ Key shortcuts for several commands
+ Improving the image viewer control performance for large images
+ Save/Load: Supporting saving/loading raw bitmap data, which preserves any pixel format
+ Color Settings:
  + Count Colors
+ New Edit Image drop down button
  + Rotate Left/Right
  + Resize Bitmap
  + Pixel Format/Quantizing/Dithering
  + Adjust Brightness/Contrast/Gamma
+ Tool strip items can be clicked even if the container form is not activated
+ API changes:
  + ViewModelFactory class:
    + New CreateResizeBitmap method
    + New CreateAdjustColorSpace method
    + New CreateCountColors method
    + New CreateAdjustBrightness method
    + New CreateAdjustContrast method
    + New CreateAdjustGamma method


~~~~~~~~~
* v2.2.1:
~~~~~~~~~

* KGySoft.Drawing.ImagingTools.exe
==================================
- Tolerating if uncompressed icon stream does not have a transparency mask.
* InstallationManager class:
  * To avoid confusion the Install method installs the .NET Core support only for the .NET 4.5 build. This is
    considered as a compatible change as .NET Core support didn't work for other builds anyway so only the error
    message will be different (and more reasonable) if we try to debug a Core project with the wrong installation.


~~~~~~~~~
* v2.2.0:
~~~~~~~~~

+ KGySoft.Drawing.ImagingTools.exe
==================================
+ Targeting also .NET Core 3.0
- The Framework builds now support Mono (tested on Ubuntu Linux)
+ The image preview now can be zoomed and scrolled freely when Auto Zoom is turned off.
  To zoom use the Ctrl + Mouse Wheel or the pinch zooming gesture on the touchpad.
  For scrolling vertical and horizontal mouse wheels and the touchpad scrolling gestures are completely supported.
+ New Smooth Zooming toggle button:
  For bitmaps and icons toggles pixelated/smoothed appearance when the image is enlarged.
  For metafiles toggles anti-aliasing on any size. Can be ignored on low memory when zooming is too large
+ API changes:
  + InstallationInfo class: New TargetFramework property (not used in the .NET Framework 3.5 version)

- KGySoft.Drawing.DebuggerVisualizers.dll
=========================================
- Changing ColorPalette serialization so now it works also when debugging .NET Core projects.

- KGySoft.Drawing.DebuggerVisualizers.Test.exe
==============================================
- Fixing issues on Mono/Linux


~~~~~~~~~
! v2.1.0:
~~~~~~~~~

! KGySoft.Drawing.ImagingTools.exe
==================================
+ API changes: New public types to be able to debug several types by referencing the KGySoft.Drawing.ImagingTools
  assembly:
  + New public types in KGySoft.Drawing.ImagingTools namespace:
    + InstallationManager class
  + New public types in KGySoft.Drawing.ImagingTools.Model namespace:
    + ImageInfoBase class
    + ImageInfo class
    + ImageFrameInfo class
    + BitmapDataInfo class
    + GraphicsInfo class
    + InstallationInfo class
    + ImageInfoType enum
  + New public types in KGySoft.Drawing.ImagingTools.ViewModel namespace:
    + IViewModel interface
    + IViewModel<TModel> interface
    + ViewModelFactory class
  + New public types in KGySoft.Drawing.ImagingTools.View namespace:
    + IView interface
    + ViewFactory class
! Functional changes:
  ! When Icon type is being debugged and a non-icon image is opened, then the image will be converted to icon
    without changing the size (allowing any icon size).
  ! When an icon is debugged as an image, the raw format of its images is always displayed as Icon. Though when
    an icon is opened from file or is debugged as icon, Bmp/Png format is displayed for non-compound view.
  ! When debugging a Graphics instance not showing all those properties anymore, which are obvious also from the
    regular debug window.
  ! Improving quality, when image is saved in a format that does not support current pixel format. Though this is
    is an improvement the result might not be incompatible with earlier results.
  ! Installation Manager: When there are multiple detected VisualStudio versions the newest one is selected by
    default instead of the oldest one.
  + Supporting all possible PixelFormats
  + Always allowing to save in Icon format
  + Saving as TIFF allows to save a multi-page image even for animations and icons if compound view is selected.
  + Installation Manager: The installer now supports .NET Core 2.1+ projects
  - If an indexed bitmap was debugged, then changing a transparent palette entry did not always work properly.

+ KGySoft.Drawing.DebuggerVisualizers.dll
=========================================
+ The DebuggerHelper class have been made public, which provides public access for some debugger visualizers.
- Serialization of a Metafile with WMF format failed in some cases.
- Debugging Bitmaps of rare PixelFormats failed, now all possible formats are supported.

+ KGySoft.Drawing.DebuggerVisualizers.Test.exe
==============================================
+ Providing tests for all possible PixelFormats (applies Bitmap, BitmapData, Graphics, Palette)
+ Bitmap/Metafile/Icon types can be debugged as Image or as their self type (affects replacing while debugging)
+ Also BitmapData and Graphics can be opened directly
- If an image was debugged directly, then after replacing the image and closing the debugger the tester was crashed.
- A Metafile with WMF format was not be able to be opened by the debugger


~~~~~~~~~
! v2.0.0:
~~~~~~~~~

! Assembly names:
=================
! Instead of many separate KGySoft.DebuggerVisualizers.VS<version>.dll files from now on there is one
  KGySoft.Drawing.DebuggerVisualizers.dll for each .NET frameworks.
! KGySoft.DebuggerVisualizers.Common.dll has been renamed to KGySoft.Drawing.ImagingTools.exe, which
  is an executable file now.

! KGySoft.Drawing.ImagingTools.exe
==================================
! As an executable file, it can be launched as a standalone application.
! In Windows XP icons will be converted to uncompressed ones.
+ New "Manage debugger visualizer installations" menu (gear icon) for installing the debugger
  visualizer to any Visual Studio version (requires the KGySoft.Drawing.DebuggerVisualizers.dll)
+ Supporting high-resolution icons in Windows XP.
+ Multi page TIFF images can be saved all together and also separately.
+ High DPI displays are supported

+ KGySoft.Drawing.DebuggerVisualizers.dll
=========================================
+ Compatible with all Visual Studio versions starting with Visual Studio 2008 (tested with versions from 2008 to 2019).

+ KGySoft.Drawing.DebuggerVisualizers.Package.dll
=================================================
+ Installer for the visualizer as a VSIX Package (only for .NET 4.5, requires at least Visual Studio 2013)
